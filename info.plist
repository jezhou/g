<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>60ADD0C4-7FC9-4670-B015-58FE5D781397</key>
		<array/>
		<key>84281126-2A79-4DF7-B30C-BB84E5D451FC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>60ADD0C4-7FC9-4670-B015-58FE5D781397</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>96881319-6A9E-4EAF-8523-493AF87D5486</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>60ADD0C4-7FC9-4670-B015-58FE5D781397</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>jezhou</string>
	<key>description</key>
	<string></string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Github</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>gp</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching PRs...</string>
				<key>script</key>
				<string>import requests
import json
import emoji

github_api_url = 'https://api.github.com/graphql'
headers = {
  'authorization': 'bearer ***REMOVED***'
}

gqlQuery = """
  query { 
    viewer { 
      login
      pullRequests(last:10) {
        nodes {
          number
          title
          url
          updatedAt
          author {
            login
          }
          reviews(states: APPROVED, first:10) {
            nodes {
              id
              author {
                login
              }
              state
            }
          }
        }
      }
    }
  }
"""

query = {
  'query': gqlQuery
}

r = requests.post(
  github_api_url, 
  headers=headers,
  json=query
)

pull_requests = r.json()['data']['viewer']['pullRequests']['nodes']
pull_requests = sorted(pull_requests, reverse=True, key=lambda k:k['updatedAt'])

def get_subtitle(pr):
  subtitle = '#' + str(pr['number'])
  approved_reviewers = []
  for review in pr['reviews']['nodes']:
    if review['state'] == 'APPROVED':
      approved_reviewers += ['@' + review['author']['login']]

  if len(approved_reviewers) &gt; 0:
    white_check_mark = u'\U00002705'
    subtitle = white_check_mark + ' ' + subtitle
    approved_reviewers = 'Approved by: ' + ' ,'.join(approved_reviewers)
  else:
    red_circle = u'\U0001F354'
    subtitle = red_circle + ' ' + subtitle
    approved_reviewers = 'Needs Approval'

  return subtitle + " | " + approved_reviewers

  

def pr_to_alfred_item(pr):
  return {
    'title': pr['title'],
    'subtitle': emoji.emojize(get_subtitle(pr)),
    'arg': pr['url']
  }

alfred_items = { 'items': map(pr_to_alfred_item, pull_requests) }

print(json.dumps(alfred_items))
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>pulls.py</string>
				<key>subtext</key>
				<string>View PRs</string>
				<key>title</key>
				<string>Pull Requests</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>84281126-2A79-4DF7-B30C-BB84E5D451FC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>60ADD0C4-7FC9-4670-B015-58FE5D781397</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>gre</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching reviews...</string>
				<key>script</key>
				<string></string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>./reviews.py</string>
				<key>subtext</key>
				<string>See reviews you need to do.</string>
				<key>title</key>
				<string>Reviews</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>96881319-6A9E-4EAF-8523-493AF87D5486</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>60ADD0C4-7FC9-4670-B015-58FE5D781397</key>
		<dict>
			<key>xpos</key>
			<integer>660</integer>
			<key>ypos</key>
			<integer>200</integer>
		</dict>
		<key>84281126-2A79-4DF7-B30C-BB84E5D451FC</key>
		<dict>
			<key>xpos</key>
			<integer>100</integer>
			<key>ypos</key>
			<integer>70</integer>
		</dict>
		<key>96881319-6A9E-4EAF-8523-493AF87D5486</key>
		<dict>
			<key>xpos</key>
			<integer>110</integer>
			<key>ypos</key>
			<integer>340</integer>
		</dict>
	</dict>
	<key>webaddress</key>
	<string></string>
</dict>
</plist>
